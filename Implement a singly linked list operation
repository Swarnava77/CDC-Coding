class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        
class LinkedList:
    def __init__(self):
        self.head = None
        
    def insert(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            curr_node = self.head
            while curr_node.next is not None:
                curr_node = curr_node.next
            curr_node.next = new_node
            
    def delete(self, data):
        if self.head is None:
            return
        if self.head.data == data:
            self.head = self.head.next
            return
        
        curr_node = self.head
        prev_node = None
        while curr_node is not None:
            if curr_node.data == data:
                prev_node.next = curr_node.next
                return
            prev_node = curr_node
            curr_node = curr_node.next
            
    def update(self, index, data):
        curr_node = self.head
        count = 0
        while curr_node is not None:
            if count == index:
                curr_node.data == data
                return
            count +=  1
            curr_node = curr_node.next
            
        
    def search(self, data):
        curr_node = self.head
        index = 0
        while curr_node is not None:
            if curr_node.data == data:
                print("Element found at index", index)
                return
            curr_node = curr_node.next
            index += 1
            
        print ("Element", data, "not found")
    
    def display(self):
        curr_node = self.head
        while curr_node is not None:
            print(curr_node.data, end=" ")
            curr_node = curr_node.next
        print()
        
    def size(self):
        size = 0
        current = self.head
        while current is not None:
            size += 1
            current = current.next
        return size
        
def main():
    
    linked_list = LinkedList()

    while True:
        choice = int(input())
    
        if choice == 1:
          data = int(input())
          linked_list.insert(data)
          
        elif choice == 2:
          data = int(input())
          linked_list.delete(data)
          
        elif choice == 3:
          index = int(input())
          data = int(input())
          linked_list.update(index, data)
          
        elif choice == 4:
          data = int(input())
          linked_list.search(data)
          
        elif choice == 5:
          linked_list.display()
          
        elif choice == 6:
          break
      
        else:
          print("Invalid choice")
        
if __name__ == "__main__":
    main()
   
